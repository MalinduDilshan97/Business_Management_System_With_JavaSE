/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.business_managment_system.view;

import edu.ijse.business_managment_system.controller.ControllerFactory;
import edu.ijse.business_managment_system.controller.custom.BatchController;
import edu.ijse.business_managment_system.controller.custom.ViewStockController;
import edu.ijse.business_managment_system.dto.BatchDTO;
import edu.ijse.business_managment_system.dto.ViewStockDTO;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Happy Go Lucky
 */
public class ViewStock extends javax.swing.JFrame {

    private BatchController ctrlBatch;
     private ViewStockController ctrlViewStock;
     private Timer tmrTime;
    
    public ViewStock() {
        
        ctrlBatch = (BatchController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.BATCH);
         ctrlViewStock = (ViewStockController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.VIEWSTOCK);
        
        initComponents();
        loadAllBatch();
        loadKeyListener();
        setTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblDelete = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBatch = new javax.swing.JTable();
        pnlTime = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Stock");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 360, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 420, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMinimumSize(new java.awt.Dimension(100, 40));
        jPanel3.setPreferredSize(new java.awt.Dimension(1300, 40));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Ecs");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 11, 50, 20));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Back");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 30, 20));

        lblDelete.setBackground(new java.awt.Color(0, 0, 0));
        lblDelete.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDelete.setForeground(new java.awt.Color(255, 255, 255));
        lblDelete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelete.setText("Delete");
        lblDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        lblDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDelete.setOpaque(true);
        lblDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDeleteMouseClicked(evt);
            }
        });
        jPanel3.add(lblDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 50, 20));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Delete Batch");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 110, 20));

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Enter");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel23.setOpaque(true);
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 50, 20));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Select");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 50, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 690, 1280, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1366, 10));

        tblBatch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblBatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch ID", "Item Code", "Model", "Buying Price", "Selling Price", "Qty On Hand", "Added Date"
            }
        ));
        jScrollPane1.setViewportView(tblBatch);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 137, 1280, 510));

        pnlTime.setBackground(new java.awt.Color(255, 255, 255));
        pnlTime.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTime.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        lblTime.setForeground(new java.awt.Color(0, 0, 204));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlTime.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 50));

        jPanel1.add(pnlTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 20, 290, 50));

        lblBack.setBackground(new java.awt.Color(102, 102, 102));
        lblBack.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblBack.setOpaque(true);
        jPanel1.add(lblBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
         Back();
        
    }//GEN-LAST:event_jLabel24MouseClicked

    private void lblDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDeleteMouseClicked
       
        DeleteBatch();
    }//GEN-LAST:event_lblDeleteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblDelete;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel pnlTime;
    private javax.swing.JTable tblBatch;
    // End of variables declaration//GEN-END:variables

    private void loadAllBatch() {
         DefaultTableModel dtm=(DefaultTableModel)tblBatch.getModel();
        dtm.setRowCount(0);
        
         try {
            ArrayList<ViewStockDTO> allItem = ctrlViewStock.getAll();

            if (allItem == null) {
                return;
            }

                    for (ViewStockDTO item : allItem) {
                        Object[] rowData = {
                        item.getBatchID(),
                        item.getiCode(),
                        item.getModel(),
                        item.getBuy(),
                        item.getUnit(),
                        item.getQty(),
                        item.getDate()
                        
                   
                   
                    };
                    dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

       /* try {
            ArrayList<BatchDTO> allBatch = ctrlBatch.getAll();

            if (allBatch == null) {
                return;
            }

            for (BatchDTO Batch : allBatch) {
                Object[] rowData = {
                    Batch.getBatchId(),
                    Batch.getGrnId(),
                    Batch.getiCode(),
                    Batch.getBuyingPrice(),
                    Batch.getUnitPrice(),
                    Batch.getQtyOnHand(),
                     Batch.getDate()
                   
                };
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } */	
    }

    private void Back() {
       this.dispose();
       tmrTime.stop();
    }

    private void DeleteBatch() {
        DefaultTableModel dtm=(DefaultTableModel)tblBatch.getModel();
	int index=tblBatch.getSelectedRow();
        String batchId=(String) dtm.getValueAt(index,0);
	dtm.removeRow(index);
				
        try{
                boolean isDeleted=ctrlBatch.delete(batchId);
	if(isDeleted){
            dtm.removeRow(index);
            JOptionPane.showMessageDialog(ViewStock.this," Batch Deleted...");
        }
	}catch(SQLException e){
		System.out.println(e.getMessage());
	}catch(ClassNotFoundException e){
		System.out.println(e.getMessage());
	} catch (Exception ex) {		
           // Logger.getLogger(ManageItem.class.getName()).log(Level.SEVERE, null, ex);
        }	
    }
    
      private void loadKeyListener() {
         KeyboardFocusManager manger = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        manger.addKeyEventPostProcessor(new KeyEventPostProcessor() {

            @Override
            public boolean postProcessKeyEvent(KeyEvent e) {
                if(e.getID()== KeyEvent.KEY_PRESSED){
                    switch(e.getKeyCode()){
                         case KeyEvent.VK_DELETE:
                            DeleteBatch();break;
                        case KeyEvent.VK_ESCAPE:
                            Back();break;
                        
                    }
                }
                return false;
            }
        });
    }

    private void setTime() {
           tmrTime=new Timer(0, new ActionListener() {

           
            public void actionPerformed(ActionEvent e) {
                Date dt = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("hh: mm: ss");
                lblTime.setText(sdf.format(dt));
            }

        } );
         tmrTime.start();
    }
}
