package edu.ijse.business_managment_system.view;

import edu.ijse.business_managment_system.controller.ControllerFactory;
import edu.ijse.business_managment_system.controller.custom.BrandController;
import edu.ijse.business_managment_system.controller.custom.GRNController;
import edu.ijse.business_managment_system.controller.custom.ItemController;
import edu.ijse.business_managment_system.controller.custom.SupplierController;
import edu.ijse.business_managment_system.controller.custom.SupplierOrderController;
import edu.ijse.business_managment_system.controller.custom.SupplierPaymentController;
import edu.ijse.business_managment_system.dto.BatchDTO;
import edu.ijse.business_managment_system.dto.BrandDTO;
import edu.ijse.business_managment_system.dto.GRNDTO;
import edu.ijse.business_managment_system.dto.GRNDetailDTO;
import edu.ijse.business_managment_system.dto.ItemDTO;
import edu.ijse.business_managment_system.dto.SupplierDTO;
import edu.ijse.business_managment_system.dto.SupplierOrderDTO;
import edu.ijse.business_managment_system.dto.SupplierPaymentDTO;
import edu.ijse.business_managment_system.idgenerator.IDGenerator;
import edu.ijse.business_managment_system.view.ManageItem;
import edu.ijse.business_managment_system.view.ViewStock;
import java.awt.Color;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Happy Go Lucky
 */
public class Grn extends javax.swing.JFrame {

    private ItemController ctrlItem;
     private SupplierOrderController ctrlSupplierOrder;
     private GRNController ctrlGRN;
     private SupplierPaymentController ctrlSupplierPayment;
     private BrandController ctrlBrand;
     private Timer tmrTime;
   
    public Grn() {
        ctrlItem = (ItemController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ITEM);
        ctrlSupplierOrder = (SupplierOrderController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SUPPLIER_ORDER);
        ctrlGRN = (GRNController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.GRN);
        ctrlSupplierPayment = (SupplierPaymentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SUPPLIER_PAYMENT);
        ctrlBrand = (BrandController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.BRAND);
        initComponents();
        loadICode();
        loadSOID();
        setOrderDate();
        loadGrnId();
        loadSPID();
        loadBatchId();
        loadKeyListener();
        setTime();
        pnlBack();
        pnlBackPayment.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlBackPayment = new javax.swing.JPanel();
        lblMakePayment = new javax.swing.JLabel();
        txtCheck = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSPID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtBatchId = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtGrnId = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtQty = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cmbCode = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel20 = new javax.swing.JLabel();
        cmbSOID = new javax.swing.JComboBox();
        lblAdd = new javax.swing.JLabel();
        lblAddGRN = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtBuy = new javax.swing.JTextField();
        txtBrand = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtSell = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGrn = new javax.swing.JTable();
        lblRemove = new javax.swing.JLabel();
        Back3 = new javax.swing.JLabel();
        lblbackCustOr = new javax.swing.JLabel();
        pnlTime = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBackPayment.setPreferredSize(new java.awt.Dimension(500, 500));
        pnlBackPayment.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMakePayment.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblMakePayment.setForeground(new java.awt.Color(255, 255, 255));
        lblMakePayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMakePayment.setText("Make Payment");
        lblMakePayment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        lblMakePayment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMakePayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMakePaymentMouseClicked(evt);
            }
        });
        pnlBackPayment.add(lblMakePayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 150, 30));

        txtCheck.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCheck.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnlBackPayment.add(txtCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 200, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Payment ID");
        pnlBackPayment.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 30));

        txtSPID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSPID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnlBackPayment.add(txtSPID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 200, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Check ID");
        pnlBackPayment.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 100, 30));

        txtTotal.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnlBackPayment.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 200, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("TotalAmount");
        pnlBackPayment.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 100, 30));

        jPanel1.add(pnlBackPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 100, 340, 210));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Make New GRN");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 360, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 420, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setMinimumSize(new java.awt.Dimension(100, 40));
        jPanel3.setPreferredSize(new java.awt.Dimension(1300, 40));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Ecs");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 11, 50, 20));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Back");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 30, 20));

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Alt");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.setOpaque(true);
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 50, 20));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("View Stock");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 90, 20));

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Enter");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel23.setOpaque(true);
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 50, 20));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Select");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 50, 20));

        jLabel32.setBackground(new java.awt.Color(0, 0, 0));
        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Ctrl");
        jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel32.setOpaque(true);
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 50, 20));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Manage Items");
        jPanel3.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 90, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 690, 1270, -1));

        txtBatchId.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtBatchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBatchIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtBatchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 220, 190, 30));

        txtModel.setEditable(false);
        txtModel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });
        jPanel1.add(txtModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 270, 370, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Batch ID :");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 220, 100, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Brand :");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 100, 30));

        txtGrnId.setEditable(false);
        txtGrnId.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtGrnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrnIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtGrnId, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 160, 190, 30));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 1250, 10));

        txtQty.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        jPanel1.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 320, 190, 30));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Item Code  :");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 100, 30));

        cmbCode.setEditable(true);
        cmbCode.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmbCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCodeActionPerformed(evt);
            }
        });
        jPanel1.add(cmbCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 190, 30));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("  Total Amount :");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 620, 130, 30));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("GRN ID :");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 160, 100, 30));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 1250, 10));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Supplier Order ID :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 140, 30));

        cmbSOID.setEditable(true);
        cmbSOID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(cmbSOID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, 190, 30));

        lblAdd.setBackground(new java.awt.Color(0, 255, 0));
        lblAdd.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdd.setText("Add");
        lblAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        lblAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAdd.setOpaque(true);
        lblAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAddMouseEntered(evt);
            }
        });
        jPanel1.add(lblAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 320, 120, 30));

        lblAddGRN.setBackground(new java.awt.Color(0, 255, 0));
        lblAddGRN.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblAddGRN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddGRN.setText("Add GRN");
        lblAddGRN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        lblAddGRN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddGRN.setOpaque(true);
        lblAddGRN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddGRNMouseClicked(evt);
            }
        });
        jPanel1.add(lblAddGRN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 620, 200, 30));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("QTY :");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 100, 30));

        txtAmount.setEditable(false);
        txtAmount.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        jPanel1.add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 620, 240, 30));

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 190, 30));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Buying Price :");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 100, 30));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Model  :");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 270, 100, 30));

        txtBuy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuyActionPerformed(evt);
            }
        });
        jPanel1.add(txtBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 190, 30));

        txtBrand.setEditable(false);
        txtBrand.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 270, 190, 30));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Selling Price :");
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 100, 30));

        txtSell.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSellActionPerformed(evt);
            }
        });
        jPanel1.add(txtSell, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 190, 30));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Date :");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 100, 30));

        tblGrn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch ID", "Item Code", "Buying Price", "Selling Price", "Qty", "Amount"
            }
        ));
        jScrollPane1.setViewportView(tblGrn);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 1150, 230));

        lblRemove.setBackground(new java.awt.Color(255, 0, 0));
        lblRemove.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblRemove.setForeground(new java.awt.Color(255, 255, 255));
        lblRemove.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRemove.setText("Remove");
        lblRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRemove.setOpaque(true);
        lblRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRemoveMouseClicked(evt);
            }
        });
        jPanel1.add(lblRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 610, 60, 20));

        Back3.setOpaque(true);
        jPanel1.add(Back3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 1260, 535));

        lblbackCustOr.setBackground(new java.awt.Color(153, 0, 153));
        lblbackCustOr.setOpaque(true);
        jPanel1.add(lblbackCustOr, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 1270, 570));

        pnlTime.setBackground(new java.awt.Color(255, 255, 255));
        pnlTime.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTime.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        lblTime.setForeground(new java.awt.Color(0, 0, 204));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlTime.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 50));

        jPanel1.add(pnlTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 20, 290, 50));

        lblBack.setBackground(new java.awt.Color(102, 102, 102));
        lblBack.setOpaque(true);
        jPanel1.add(lblBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBatchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBatchIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBatchIdActionPerformed

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        ManageItem();
        
    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked

       Back();
        
    }//GEN-LAST:event_jLabel24MouseClicked

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtGrnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrnIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrnIdActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuyActionPerformed

    private void txtSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSellActionPerformed

    private void cmbCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCodeActionPerformed
        try {
            String code=(String)cmbCode.getSelectedItem();
            ItemDTO item=ctrlItem.search(code);
            txtModel.setText(item.getModel());
            String bid= (item.getBrand());
             BrandDTO brand = ctrlBrand.search(bid);
            txtBrand.setText(brand.getBrandName());
            
        } catch (Exception ex) {
           // Logger.getLogger(SupOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbCodeActionPerformed
        double totalAmount;
    private void lblAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseClicked

        
            boolean isCheck=Check();
            if(isCheck){

                    String itemCode=(String)cmbCode.getSelectedItem();
                        DefaultTableModel dtm=(DefaultTableModel)tblGrn.getModel();
                        String batch=txtBatchId.getText();
                        double buy=Double.parseDouble(txtBuy.getText());
                        double sell=Double.parseDouble(txtSell.getText());
                        int Qty=Integer.parseInt(txtQty.getText());


                            for(int i=0;i<dtm.getRowCount();i++){
                                String code=(String)dtm.getValueAt(i,1);
                                if(itemCode.equals(code)){
                                    int qty=(int)dtm.getValueAt(i,4);	
                                    Qty+=qty;
                                    dtm.removeRow(i);
                                    totalAmount-=qty*buy;
                                }
                            }
                            double amount=buy*Qty;

                             totalAmount+=amount;
                            txtAmount.setText(""+totalAmount);


                            Object[] rowData={batch,itemCode,buy,sell,Qty,amount};	
                            dtm.addRow(rowData);

                             txtQty.setText("");
                             txtBuy.setText("");
                             txtSell.setText("");
                             txtBatchId.setText("");
                             
            }else{
                 JOptionPane.showMessageDialog(this, "Check Again, And Input Validate Data To Proceed. ", "Error", JOptionPane.ERROR_MESSAGE);
            } 
       

    }//GEN-LAST:event_lblAddMouseClicked

    private void lblRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveMouseClicked
       DefaultTableModel dtm=(DefaultTableModel)tblGrn.getModel();
				int index=tblGrn.getSelectedRow();
                                double amount=(double)dtm.getValueAt(index,5);
				dtm.removeRow(index);
				totalAmount-=amount;
				txtAmount.setText(""+totalAmount); 			
    }//GEN-LAST:event_lblRemoveMouseClicked

    private void lblAddGRNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddGRNMouseClicked
            
       
        
             DefaultTableModel dtm=(DefaultTableModel)tblGrn.getModel();
             String grnId=txtGrnId.getText();
             String soid=(String) cmbSOID.getSelectedItem();
             String date = txtDate.getText();

             GRNDTO grnDTO = new GRNDTO(grnId,soid,date);

             ArrayList<GRNDetailDTO> allGRNDetails = new ArrayList<>();

             for(int i=0;i<dtm.getRowCount();i++){
                 GRNDetailDTO grnDetail = new GRNDetailDTO(
                         txtGrnId.getText(),
                         dtm.getValueAt(i, 1).toString(),
                         Double.parseDouble(dtm.getValueAt(i, 2).toString()),
                         Double.parseDouble(dtm.getValueAt(i, 3).toString()),
                         Integer.parseInt(dtm.getValueAt(i, 4).toString()));

                 allGRNDetails.add(grnDetail);
             }

             ArrayList<BatchDTO> allBatch = new ArrayList<>();

             for(int i=0;i<dtm.getRowCount();i++){
                 BatchDTO batch = new BatchDTO(
                         dtm.getValueAt(i, 0).toString(),
                         txtGrnId.getText(),
                         dtm.getValueAt(i, 1).toString(),
                         Double.parseDouble(dtm.getValueAt(i, 2).toString()),
                         Double.parseDouble(dtm.getValueAt(i, 3).toString()),
                         Integer.parseInt(dtm.getValueAt(i, 4).toString()),
                         txtDate.getText());

                 allBatch.add(batch);
             }

             try {
                 boolean result = ctrlGRN.add(grnDTO, allGRNDetails ,allBatch);
                 if (result){
                     JOptionPane.showMessageDialog(this, "GRN has been successfully placed","Success",JOptionPane.INFORMATION_MESSAGE);
                    pnlBackPayment.setVisible(true);
                    double amount =Double.parseDouble(txtAmount.getText());
                    txtTotal.setText(""+amount);
                 }else{
                     JOptionPane.showMessageDialog(this, "Failed to place the GRN", "Error", JOptionPane.ERROR_MESSAGE);
                 }
             } catch (Exception ex) {
                 JOptionPane.showMessageDialog(this, "Failed to place the GRN", "Error", JOptionPane.ERROR_MESSAGE);
                 Logger.getLogger(Grn.class.getName()).log(Level.SEVERE, null, ex);
             }
        
    }//GEN-LAST:event_lblAddGRNMouseClicked

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        
    }//GEN-LAST:event_txtAmountActionPerformed

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
       ViewStock();
       
    }//GEN-LAST:event_jLabel22MouseClicked

    private void lblMakePaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMakePaymentMouseClicked
            String spid=txtSPID.getText();
            String grnId = txtGrnId.getText();
            double amount =Double.parseDouble(txtAmount.getText());
            String date = txtDate.getText();
            String checkId = txtCheck.getText();

            SupplierPaymentDTO supplierPaymentDTO = new SupplierPaymentDTO(spid,grnId,amount,checkId,date);
            try{
                boolean isAdded=ctrlSupplierPayment.add(supplierPaymentDTO);
            if(isAdded){
                JOptionPane.showMessageDialog(Grn.this,"Payment Added Successfully");
                 DefaultTableModel dtm=(DefaultTableModel)tblGrn.getModel();
                 dtm.setRowCount(0);
                 loadGrnId();
                 pnlBackPayment.setVisible(false);
                 loadSPID();
                 loadBatchId();
                 txtAmount.setText("");
            }
           }catch(SQLException e){
               JOptionPane.showMessageDialog(Grn.this,e);
            }catch(ClassNotFoundException e){
                JOptionPane.showMessageDialog(Grn.this,e);
            } catch (Exception ex) {
                  Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_lblMakePaymentMouseClicked

    private void lblAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblAddMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Back3;
    private javax.swing.JComboBox cmbCode;
    private javax.swing.JComboBox cmbSOID;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAdd;
    private javax.swing.JLabel lblAddGRN;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblMakePayment;
    private javax.swing.JLabel lblRemove;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblbackCustOr;
    private javax.swing.JPanel pnlBackPayment;
    private javax.swing.JPanel pnlTime;
    private javax.swing.JTable tblGrn;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBatchId;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtBuy;
    private javax.swing.JTextField txtCheck;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtGrnId;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSPID;
    private javax.swing.JTextField txtSell;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void loadICode() {
         String code = null;
        try {
            ArrayList<ItemDTO> allItems=ctrlItem.getAll();
            if (allItems == null) {
                return;
            }
            cmbCode.removeAllItems();
            for(ItemDTO item: allItems){
                code=item.getICode();
                cmbCode.addItem(code);
            }
           
            
        } catch (Exception ex) {
            Logger.getLogger(SupOrder.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void loadSOID() {
        String soid = null;
        try {
            ArrayList<SupplierOrderDTO> allSupplierOrder=ctrlSupplierOrder.getAll();
            if (allSupplierOrder == null) {
                return;
            }
            cmbSOID.removeAllItems();
            for(SupplierOrderDTO supplierOrder: allSupplierOrder){
                soid=supplierOrder.getSoid();
                cmbSOID.addItem(soid);
            }
           
            
        } catch (Exception ex) {
            Logger.getLogger(SupOrder.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void setOrderDate() {
        java.util.Date d1=new java.util.Date();
		SimpleDateFormat df=new SimpleDateFormat("YYYY-MM-dd");
		String formatDate=df.format(d1);
		txtDate.setText(formatDate);
    }

    private void loadGrnId() {
        String newID;
        try {
            newID = IDGenerator.getNewID("GRN", "GRNID", "GRN");
            txtGrnId.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }

    private void ManageItem() {
        new ManageItem().setVisible(true);
    }

    private void ViewStock() {
         new ViewStock().setVisible(true);
    }

    private void loadKeyListener() {
         KeyboardFocusManager manger = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        manger.addKeyEventPostProcessor(new KeyEventPostProcessor() {

            @Override
            public boolean postProcessKeyEvent(KeyEvent e) {
                if(e.getID()== KeyEvent.KEY_PRESSED){
                    switch(e.getKeyCode()){
                        case KeyEvent.VK_CONTROL:
                            ManageItem();break;
                        case KeyEvent.VK_ALT:
                            ViewStock();break;
                        case KeyEvent.VK_ESCAPE:
                            Back();break;
                        
                    }
                }
                return false;
            }
        });
    }

    private void Back() {
        this.dispose();
        tmrTime.stop();
    }

    private void loadBatchId() {
        String newID;
        try {
            newID = IDGenerator.getNewID("Batch", "BatchID", "Batch");
            txtBatchId.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }
    
     private boolean Check(){
       
       String buy = txtBuy.getText();
       String sell = txtSell.getText();
       String qty = txtQty.getText();
       String batch = txtBatchId.getText();
        
          
               if (sell.matches("[0-9 ]+")) {
                  if (qty.matches("[0-9 ]+")) {
                      if (batch.matches("[A-Za-z0-9 ]+")) {
                     
                        return true;
                      }
                  } 
              }  
          
         return false;  
    }
     
    

    private void loadSPID() {
        String newID;
        try {
            newID = IDGenerator.getNewID("SupplierPayment", "SPID", "SP");
            txtSPID.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }

    private void setTime() {
         tmrTime=new Timer(0, new ActionListener() {

           
            public void actionPerformed(ActionEvent e) {
                Date dt = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("hh: mm: ss");
                lblTime.setText(sdf.format(dt));
            }

        } );
         tmrTime.start();
    }

    private void pnlBack() {
       pnlBackPayment.setBackground(new Color(0,0,0,200));
         pnlBackPayment.setVisible(false);
    }
}
